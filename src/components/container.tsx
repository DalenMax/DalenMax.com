'use client'

import Image from 'next/image';
import { Cards, Card } from '../../src';
import { useRouter } from 'next/navigation';
import { MyTelegramIcon } from '@/icons/my-icon';

// SVG Icons as components
const TelegramIcon = () => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
  </svg>
);

const XIcon = () => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
  </svg>
);

const YoutubeIcon = () => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
  </svg>
);

const GithubIcon = () => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/>
  </svg>
);

const translations = {
  'en': {
    greeting: "Hey! I'm Dalen Max.",
    bio: "I'm a developer specializing in blockchain and smart contracts, building decentralized applications with secure and efficient solutions. You can find me on the platforms below. I also love sharing my knowledge through blog posts here!",
    community: {
      title: "Join Our Community",
      description: "A place for developers passionate about blockchain and smart contracts. Let's learn, share, and build breakthrough projects together! üöÄ"
    },
    youtube: {
      title: "Follow my YouTube channel!",
      description: "I make super easy-to-understand videos about programming, blockchain, and smart contracts. üëâ Subscribe to learn and grow together!"
    },
    twitter: {
      title: "Follow me on ùïè",
      description: "Follow me on ùïè for quick updates on interesting programming tips, blockchain, and smart contracts!"
    },
    github: {
      title: "Github",
      description: "I share code and projects about blockchain and smart contracts on GitHub."
    }
  },
  'zh': {
    greeting: "Âó®ÔºÅÊàëÊòØ Dalen Max„ÄÇ",
    bio: "ÊàëÊòØ‰∏ÄÂêç‰∏ìÊ≥®‰∫éÂå∫ÂùóÈìæÂíåÊô∫ËÉΩÂêàÁ∫¶ÁöÑÂºÄÂèëËÄÖÔºåËá¥Âäõ‰∫éÊûÑÂª∫ÂÆâÂÖ®È´òÊïàÁöÑÂéª‰∏≠ÂøÉÂåñÂ∫îÁî®„ÄÇÊÇ®ÂèØ‰ª•Âú®‰∏ãÊñπÂπ≥Âè∞ÊâæÂà∞Êàë„ÄÇÊàë‰πüÂñúÊ¨¢Âú®ËøôÈáåÈÄöËøáÂçöÂÆ¢ÂàÜ‰∫´ÊàëÁöÑÁü•ËØÜÔºÅ",
    community: {
      title: "Âä†ÂÖ•Êàë‰ª¨ÁöÑÁ§æÂå∫",
      description: "ËøôÈáåÊòØÁÉ≠Áà±Âå∫ÂùóÈìæÂíåÊô∫ËÉΩÂêàÁ∫¶ÁöÑÂºÄÂèëËÄÖÁöÑÂ§©Âú∞„ÄÇËÆ©Êàë‰ª¨‰∏ÄËµ∑Â≠¶‰π†„ÄÅÂàÜ‰∫´„ÄÅÊûÑÂª∫Á™ÅÁ†¥ÊÄßÈ°πÁõÆÔºÅüöÄ"
    },
    youtube: {
      title: "ÂÖ≥Ê≥®ÊàëÁöÑ YouTube È¢ëÈÅìÔºÅ",
      description: "ÊàëÂà∂‰ΩúË∂ÖÊòìÊáÇÁöÑÁºñÁ®ã„ÄÅÂå∫ÂùóÈìæÂíåÊô∫ËÉΩÂêàÁ∫¶ËßÜÈ¢ë„ÄÇüëâ ËÆ¢ÈòÖÈ¢ëÈÅìÔºåËÆ©Êàë‰ª¨‰∏ÄËµ∑Â≠¶‰π†ÂíåÊàêÈïøÔºÅ"
    },
    twitter: {
      title: "Âú® ùïè ‰∏äÂÖ≥Ê≥®Êàë",
      description: "Âú® ùïè ‰∏äÂÖ≥Ê≥®ÊàëÔºåËé∑ÂèñÊúâË∂£ÁöÑÁºñÁ®ãÊäÄÂ∑ß„ÄÅÂå∫ÂùóÈìæÂíåÊô∫ËÉΩÂêàÁ∫¶ÁöÑÂø´ÈÄüÊõ¥Êñ∞ÔºÅ"
    },
    github: {
      title: "Github",
      description: "ÊàëÂú® GitHub ‰∏äÂàÜ‰∫´Âå∫ÂùóÈìæÂíåÊô∫ËÉΩÂêàÁ∫¶ÁöÑ‰ª£Á†Å‰∏éÈ°πÁõÆ„ÄÇ"
    }
  },
  'vi': {
    greeting: "Xin ch√†o! M√¨nh l√† Dalen Max.",
    bio: "M√¨nh l√† developer chuy√™n v·ªÅ blockchain v√† smart contract, x√¢y d·ª±ng c√°c ·ª©ng d·ª•ng phi t·∫≠p trung v·ªõi gi·∫£i ph√°p an to√†n v√† hi·ªáu qu·∫£. B·∫°n c√≥ th·ªÉ t√¨m th·∫•y m√¨nh tr√™n c√°c n·ªÅn t·∫£ng b√™n d∆∞·ªõi. M√¨nh c≈©ng th√≠ch chia s·∫ª nh·ªØng g√¨ m√¨nh bi·∫øt qua c√°c b√†i blog ·ªü ƒë√¢y!",
    community: {
      title: "Tham gia c·ªông ƒë·ªìng c·ªßa ch√∫ng t√¥i",
      description: "N∆°i d√†nh cho c√°c dev ƒëam m√™ blockchain v√† smart contract. C√πng h·ªçc h·ªèi, chia s·∫ª, v√† x√¢y d·ª±ng nh·ªØng d·ª± √°n ƒë·ªôt ph√°! üöÄ"
    },
    youtube: {
      title: "Theo d√µi k√™nh YouTube c·ªßa m√¨nh!",
      description: "M√¨nh l√†m video v·ªÅ l·∫≠p tr√¨nh, blockchain v√† smart contract si√™u d·ªÖ hi·ªÉu. üëâ Subscribe k√™nh m√¨nh ƒë·ªÉ c√πng h·ªçc v√† ph√°t tri·ªÉn nh√©!"
    },
    twitter: {
      title: "Theo d√µi m√¨nh tr√™n ùïè",
      description: "Theo d√µi m√¨nh tr√™n ùïè ƒë·ªÉ c·∫≠p nh·∫≠t nhanh c√°c m·∫πo l·∫≠p tr√¨nh, blockchain v√† smart contract th√∫ v·ªã nh√©!"
    },
    github: {
      title: "Github",
      description: "M√¨nh chia s·∫ª code v√† d·ª± √°n v·ªÅ blockchain, smart contract tr√™n GitHub."
    }
  }
};

const Container = () => {
  const router = useRouter();
  // t·∫°m th·ªùi d·ªÉ ti·∫øng vi·ªát tr∆∞·ªõc fix sau
  //const { locale = 'en-US' } = router;
  const locale = 'vi';
  const t = translations[locale];

  const containerStyle = {
    maxWidth: '1260px',
    margin: '0 auto',
    padding: '2em 0',
    minHeight: 'calc(100vh - 240px)'
  };

  const contentWrapperStyle = {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    gap: '2em',
    padding: '0 20px'
  };

  const textContentStyle = {
    flex: '1',
    maxWidth: '500px'
  };

  const imageStyle = {
    width: 500,
    height: 400,
    objectFit: 'cover',
    borderRadius: 8
  };

 const iconStyle = {
    display: 'inline-block',
    verticalAlign: 'middle',
    marginRight: '8px'
  };

  return (
    <section style={containerStyle}>
      <div style={contentWrapperStyle}>
        <div style={textContentStyle}>
          <h1 style={{ fontSize: '2.5em', marginBottom: '0.5em' }}>
            {t.greeting}
          </h1>
          <p style={{ fontSize: '1.2em', lineHeight: '1.6', color: '#666' }}>
            {t.bio}
          </p>
        </div>
        <div style={{width:500, height: 400, position: 'relative'}}>
          <Image
            src="/profiles/avatar-2.jpg"
            fill
            alt="Dalen Max"
            style={{borderRadius:8}}
            objectFit='cover'
          />
      </div>
      </div>
      <Cards>
        <Card
          arrow
          title={t.community.title}
          icon = {<TelegramIcon />}
          description={t.community.description}
          href="https://t.me/devanything"
        />
        <Card
          arrow
          title= {t.youtube.title}
          icon = {<YoutubeIcon/>}
          description={t.youtube.description}
          href="https://www.youtube.com/@DalenMax"
        />
        <Card
          arrow
          title = {t.twitter.title}
          icon = {<XIcon/>}
          description={t.twitter.description}
          href="https://x.com/realDalenMax"
        />
        <Card
          arrow
          title= {t.github.title}
          icon = {<GithubIcon/>}
          description={t.github.description}
          href="https://github.com/DalenMax"
        />
      </Cards>
    </section>
  );
};

export default Container;
